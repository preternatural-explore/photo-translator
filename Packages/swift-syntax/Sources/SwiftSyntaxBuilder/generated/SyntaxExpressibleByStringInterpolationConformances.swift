//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

import SwiftSyntax

extension AccessorBlockSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension AccessorBlockSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension AccessorDeclSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension AccessorDeclSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension AttributeSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension AttributeSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension CatchClauseSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension CatchClauseSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension ClosureParameterSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension ClosureParameterSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension CodeBlockItemSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension CodeBlockItemSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension DeclSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension DeclSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension EnumCaseParameterSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension EnumCaseParameterSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension ExprSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension ExprSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension FunctionParameterSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension FunctionParameterSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension GenericParameterClauseSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension GenericParameterClauseSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension MemberBlockSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension MemberBlockSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension PatternSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension PatternSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension SourceFileSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension SourceFileSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension StmtSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension StmtSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension SwitchCaseSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension SwitchCaseSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension TypeSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension TypeSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension AccessorDeclListSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension AccessorDeclListSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension AttributeListSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension AttributeListSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension CodeBlockItemListSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension CodeBlockItemListSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

extension MemberBlockItemListSyntax: SyntaxExpressibleByStringInterpolation {}

#if compiler(>=6)
extension MemberBlockItemListSyntax: @retroactive ExpressibleByStringInterpolation {}
#endif

